name: "Build and Deploy"

on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true

      - name: Install dependencies
        run: bundle install

      - name: Build site
        run: bundle exec jekyll build --destination _site
        env:
          JEKYLL_ENV: "production"

      - name: Debug Jekyll Output
        run: |
          echo "Checking if _site directory exists..."
          ls -lah
          ls -lah _site || echo "_site directory does not exist!"

      - name: Test site
        run: |
          if [ -d "_site" ]; then 
            bundle exec htmlproofer _site --disable-external --allow_hash_href; 
          else 
            echo "Skipping HTML Proofer - _site not found"; 
          fi

      - name: Check for Symlinks
        run: |
          if [ -d "_site" ]; then 
            find _site -type l -exec ls -lah {} \;; 
          else 
            echo "_site directory not found"; 
          fi

      - name: Check for Hard Links
        run: |
          if [ -d "_site" ]; then 
            find _site -type f -links +1; 
          else 
            echo "_site directory not found"; 
          fi

      - name: Remove Symlinks and Hard Links
        run: |
          if [ -d "_site" ]; then 
            find _site -type l -delete
            find _site -type f -links +1 -exec rm {} \;
          fi

      - name: Fix File Permissions
        run: |
          if [ -d "_site" ]; then 
            sudo chmod -R 644 _site
            sudo find _site -type d -exec chmod 755 {} \;
            sudo chown -R $(whoami) _site
          fi

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_site"
          name: "github-pages"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4